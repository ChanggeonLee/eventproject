//- 이벤트 이름
.form-group
    label(for='title') 이벤트 이름
    input.form-control(type='text', id='title', name='title', placeholder="What's your event title?" , value=event.title)

//- 장소
.form-group
    //-  지도 핀찍는 곳이 들어간다.
    .map_wrap
        #map(style='width:100%;height:100%;position:relative;overflow:hidden;')
        .hAddr
            span.title 지도중심기준 행정동 주소정보
            span#centerAddr
        
        script(type='text/javascript', src='//dapi.kakao.com/v2/maps/sdk.js?appkey=6044a29c276ca4c9187d521d0a734448&libraries=services')
        
        script.
            var detail_address; // 디테일 어드레스
            var mapContainer = document.getElementById('map'), // 지도를 표시할 div
                mapOption = {
                    center: new daum.maps.LatLng(37.566826, 126.9786567), // 지도의 중심좌표
                    level: 1 // 지도의 확대 레벨
                };
            
            // 지도를 생성합니다
            var map = new daum.maps.Map(mapContainer, mapOption);
            
            // 주소-좌표 변환 객체를 생성합니다
            var geocoder = new daum.maps.services.Geocoder();
            var marker = new daum.maps.Marker(), // 클릭한 위치를 표시할 마커입니다
                infowindow = new daum.maps.InfoWindow({zindex:1}); // 클릭한 위치에 대한 주소를 표시할 인포윈도우입니다
            
            // 현재 지도 중심좌표로 주소를 검색해서 지도 좌측 상단에 표시합니다
            searchAddrFromCoords(map.getCenter(), displayCenterInfo);
            
            // 지도를 클릭했을 때 클릭 위치 좌표에 대한 주소정보를 표시하도록 이벤트를 등록합니다
            daum.maps.event.addListener(map, 'click', function(mouseEvent) {
                searchDetailAddrFromCoords(mouseEvent.latLng, function(result, status) {
                if (status === daum.maps.services.Status.OK) {
                    detail_address = result[0].road_address.address_name;
                    // #locate의 value값에 주소 넣기
                    $("#locate").val(detail_address);
                    console.log(detail_address);
                    var detailAddr = !!result[0].road_address ? '<div>도로명주소 : ' + result[0].road_address.address_name + '</div>' : '';
                    detailAddr += '<div>지번 주소 : ' + result[0].address.address_name + '</div>';
                    
                    var content = '<div class="bAddr">' +
                                    '<span class="title">법정동 주소정보</span>' +
                                    detailAddr +
                                '</div>';
                    // 마커를 클릭한 위치에 표시합니다
                    marker.setPosition(mouseEvent.latLng);
                    marker.setMap(map);
                    
                    // 인포윈도우에 클릭한 위치에 대한 법정동 상세 주소정보를 표시합니다
                    infowindow.setContent(content);
                    infowindow.open(map, marker);
                    }
                });
            });
            
            // 중심 좌표나 확대 수준이 변경됐을 때 지도 중심 좌표에 대한 주소 정보를 표시하도록 이벤트를 등록합니다
            daum.maps.event.addListener(map, 'idle', function() {
                searchAddrFromCoords(map.getCenter(), displayCenterInfo);
            });
            
            function searchAddrFromCoords(coords, callback) {
                // 좌표로 행정동 주소 정보를 요청합니다
                geocoder.coord2RegionCode(coords.getLng(), coords.getLat(), callback);
            }
            
            function searchDetailAddrFromCoords(coords, callback) {
                // 좌표로 법정동 상세 주소 정보를 요청합니다
                geocoder.coord2Address(coords.getLng(), coords.getLat(), callback);
            }
            
            // 지도 좌측상단에 지도 중심좌표에 대한 주소정보를 표출하는 함수입니다
            function displayCenterInfo(result, status) {
                if (status === daum.maps.services.Status.OK) {
                    var infoDiv = document.getElementById('centerAddr');
                    for(var i = 0; i < result.length; i++) {
                        // 행정동의 region_type 값은 'H' 이므로
                        if (result[i].region_type === 'H') {
                            infoDiv.innerHTML = result[i].address_name;
                            break;
                        }
                    }
                }
            }

         

    label(for='locate') 주소
    input.form-control(type='locate', id='locate', name='locate', placeholder='locate' ,value=event.locat)
    label(for='detail_address') 상세 주소
    input.form-control(type='detail_address', id='detail_address', name='detail_address', placeholder='detail_address' ,value=event.detail_address)

//- 시작시간
.form-group
    label(for='start_time') 시작시간
    .row
        .col
            input.form-control(type='start_time_date', id='start_time_date', name='start_time_date', placeholder='start_time_date' ,value=event.start_time.date)
        .col
            input.form-control(type='start_time_time', id='start_time_time', name='start_time_time', placeholder='start_time_time' ,value=event.start_time.time)

//- 종료시간
.form-group
    label(for='end_time') 종료시간
    .row
        .col
            input.form-control(type='end_time_date', id='end_time_date', name='end_time_date', placeholder='end_time_date' ,value=event.end_time.date)
        .col
            input.form-control(type='end_time_time', id='end_time_time', name='end_time_time', placeholder='end_time_time' ,value=event.end_time.time)

//- 사진업로드
.form-group
    label(for="img")
    input#file.form-control(type="file" , multiple="multiple")
    input#url.form-control(type="text", readonly="readonly", name="img", value=event.img )
    img#preview.img-fluid(src="https://dummyimage.com/200x200/ccc/fff")

script.
    $(function() {
        $("#preview").hide();
        $("#file").change(function() {
            var files = $("#file")[0].files;
            for(file of files){
                if (file) {
                    var url = "/s3?filename=" + encodeURIComponent(file.name) + 
                            "&type=" + encodeURIComponent(file.type);
                    console.log(url);
                    $.getJSON(url, function(resp) {
                        console.log(resp.signedRequest);
                        $.ajax({
                            url: resp.signedRequest,
                            method: 'PUT',
                            data: file,
                            headers: {'x-amz-acl': 'public-read', 'Content-Type': file.type},
                            processData: false, 
                            contentType: file.type,
                            success: function() {
                                $("#preview").attr("src", resp.url).show();
                                $("#url").val(resp.url);
                            }
                        });
                    });
                }
            }
        });
    });


//- WYSIWYG
//- CK editor
//- 상세설명
.form-group
    label(for='info') 상세설명
    textarea#editor(name="info" value=event.info)
        |
    script.
        ClassicEditor
            .create( document.querySelector( '#editor' ) )
            .catch( error => {
                console.error( error );
            } );

//- 등록 조직
.form-group
    label(for='organize') 등록 조직
    input.form-control(type='organize', id='organize', name='organize', placeholder='organize' value=event.organize)

//- 등록 조직 설명
.form-group
    label(for='organize_info') 등록 조직 설명
    textarea#organize_info(name="organize_info" value=event.organize_info)
        |
    script.
        ClassicEditor
            .create( document.querySelector( '#organize_info' ) )
            .catch( error => {
                console.error( error );
            } );
    
//- 이벤트 종류
.form-group
    label(for='event_type') 이벤트 종류 
    select.custom-select(name='event_type' value=event.event_type)
        option(selected='') 이벤트 유형 선택  
        option(value='캠프') 캠프
        option(value='수업') 수업
        option(value='콘서트') 콘서트
        option(value='회의') 회의
        option(value='협약') 협약
        option(value='축제') 축제
        option(value='파티') 파티
        option(value='세미나') 세미나
        option(value='전시회') 전시회

//- 이벤트 분야
.form-group
    label(for='event_field') 이벤트 분야
    select.custom-select(name='event_field' value=event.event_field)
        option(selected='') 주제 선택 
        option(value='자동차') 자동차
        option(value='비즈니스') 비즈니스
        option(value='지역 사회 및 문화') 지역 사회 및 문화
        option(value='패션') 패션
        option(value='가족') 가족
        option(value='음식') 음식
        option(value='영화') 영화
        option(value='건강') 건강
        option(value='취미') 취미
        option(value='음악') 음악
        option(value='종교') 종교
        option(value='과학') 과학
        option(value='스포츠') 스포츠

//- 티켓
.form-group
    label(for='ticket') Tickets
    p
        a.btn.btn-primary(data-toggle='collapse', href='#Free_Tickets', aria-expanded='false', aria-controls='Free_Tickets')
            | Free Tickets
        |   
        a.btn.btn-primary(data-toggle='collapse', href='#Paid_Tickets', aria-expanded='false', aria-controls='Paid_Tickets')
            | Paid Tickets

    #Free_Tickets.collapse
        .card.card-body
            | Free Tickets
    
    #Paid_Tickets.collapse
        .row
            .col
                |ticket name
                input.form-control(type='ticket_name', id='ticket_name', name='ticket_name', placeholder='ticket_name' ,value=event.ticket.name)
            .col
                |ticket price
                input.form-control(type='ticket_price', id='ticket_price', name='ticket_price', placeholder='ticket_price' ,value=event.ticket.cost)

//-  최대인원 
.form-group
    label(for='attendance_max') 최대인원
    input.form-control(type='attendance_max', id='attendance_max', name='attendance_max', placeholder='attendance_max' , value=event.attendance_max)

//-  설문
.form-group
    label(for='attendance_max') 설문(바꿔야됨)
    //- input.form-control(type='attendance_max', id='attendance_max', name='attendance_max', placeholder='attendance_max')
